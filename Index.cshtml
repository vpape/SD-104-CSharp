<hr />
Enter Name: <input type="text" name="HeroName" id="HeroName" /><br />
<button onclick="StartGame();" id="StartGame">Start Game</button>
<hr />
<table cellpadding="20" cellspacing="20"><tr><td>
    <table width="200" cellpadding="5" cellspacing="5" border="1">
        <tr>
            <td colspan="2" align="center">Hero</td>
        </tr>
        <tr>
            <td>Name</td>
            <td id="Name"></td>
        </tr>
        <tr>
            <td>Health</td>
            <td id="Health"></td>
        </tr>
        <tr>
            <td>LvL</td>
            <td id="LvL"></td>
        </tr>
        <tr>
            <td>AttackPower</td>
            <td id="AttackPower"></td>
        </tr>
        <tr>
            <td>Current EXP</td>
            <td id="CurrentEXP"></td>
        </tr>
        <tr>
            <td>Weapon</td>
            <td id="Weapon"></td>
        </tr>
    </table>
    </td><td>
    <table width="200" cellpadding="5" cellspacing="5" border="1">
        <tr>
            <td colspan="2" align="center">Monster</td>
        </tr>
        <tr>
            <td>Name</td>
            <td id="MName"></td>
        </tr>
        <tr>
            <td>Health</td>
            <td id="MHealth"></td>
        </tr>
        <tr>
            <td>LvL</td>
            <td id="MLvL"></td>
        </tr>
        <tr>
            <td>AttackPower</td>
            <td id="MAttackPower"></td>
        </tr>
        <tr>
            <td>EXP value</td>
            <td id="MEXP"></td>
        </tr>
        <tr>
            <td>Weapon</td>
            <td id="MWeapon"></td>
        </tr>
    </table>
    </td></tr>
</table>
<hr />
@*<button onclick="LevelUp();">Level Up</button>*@
<button onclick="Attack();" id="attack" disabled>Attack</button>
<hr />
<div id="hattackresults"></div>
<div id="mattackresults"></div>
<script>
    var hero;
    var monster;

    function SetHeroValues(data) {
        hero = data;
        console.table(data);

        document.getElementById("Name").innerHTML = data.Name;
        document.getElementById("Health").innerHTML = data.Health;
        document.getElementById("LvL").innerHTML = data.LVL;
        document.getElementById("AttackPower").innerHTML = data.AttackPower;
        document.getElementById("CurrentEXP").innerHTML = data.CurrentEXP;
        document.getElementById("Weapon").innerHTML = data.Weapon.Name;
        document.getElementById("Weapon").title = "Attack Value: " + data.Weapon.AttackValue + "\r\nAttack Modifier: " + data.Weapon.AttackModifier;
        //weapon.addEventListener("onMouseOver", function () {

        //}
        //    ) 
    }

    function SetMonsterValues(data) {
        monster = data;
        monster.Weapon.Name = "Monster's Rusty Sword"
        //console.table(data);

        document.getElementById("MName").innerHTML = data.Name;
        document.getElementById("MHealth").innerHTML = data.Health;
        document.getElementById("MLvL").innerHTML = data.LVL;
        document.getElementById("MAttackPower").innerHTML = data.AttackPower;
        document.getElementById("MEXP").innerHTML = data.EXP;
        document.getElementById("MWeapon").innerHTML = monster.Weapon.Name;
        document.getElementById("MWeapon").title = "Attack Value: " + data.Weapon.AttackValue + "\r\nAttack Modifier: " + data.Weapon.AttackModifier;
        //weapon.addEventListener("onMouseOver", function () {

        //}
        //    ) 
    }

    function UpdateValues(data) {
        SetHeroValues(data.Hero);
        SetMonsterValues(data.Monster);
    }

    function StartGame() {
        document.getElementById("StartGame").disabled = true;

        var HeroName = document.getElementById("HeroName");

        postData('GameStart', { Name: HeroName.value })
            .then(data => UpdateValues(data))
            //.then(data => SetMonsterValues(data))
            .catch(error => console.error(error))

        document.getElementById("attack").disabled = false;

    }

    function doAttack(data) {
        document.getElementById("hattackresults").innerHTML = "You attack for " + data.HAttack
        document.getElementById("mattackresults").innerHTML = "Monster attacks for " + data.MAttack;

        hero.Health -= data.MAttack;
        document.getElementById("Health").innerHTML = hero.Health;
        monster.Health -= data.HAttack;
        document.getElementById("MHealth").innerHTML = monster.Health;
        }

    function LevelUp() {
        document.getElementById("Name").innerHTML;

        postData('LevelUp', { Name: HeroName.value })
            .then(data => SetHeroValues(data))
            .catch(error => console.error(error))
    }

    function Attack() {
        postData('Attack', { AttackPower: hero.AttackPower, AttackValue: hero.Weapon.AttackValue, AttackModifier: hero.Weapon.AttackModifier, MAttackPower: monster.AttackPower, MAttackValue: monster.Weapon.AttackValue, MAttackModifier: monster.Weapon.AttackModifier })
            .then(data => doAttack(data))
            .catch(error => console.error(error))
    }

    function postData(url, data) {
        // Default options are marked with *
        return fetch(url, {
            body: JSON.stringify(data), // must match 'Content-Type' header
            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
            credentials: 'same-origin', // include, same-origin, *omit
            headers: {
                'user-agent': 'Mozilla/4.0 MDN Example',
                'content-type': 'application/json'
            },
            method: 'POST', // *GET, POST, PUT, DELETE, etc.
            mode: 'cors', // no-cors, cors, *same-origin
            redirect: 'follow', // manual, *follow, error
            referrer: 'no-referrer', // *client, no-referrer
        })
            .then(response => response.json()) // parses response to JSON
    }
</script>


